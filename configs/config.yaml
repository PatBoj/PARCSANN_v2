# =================================================================================================
# GENERAL SETTINGS
# =================================================================================================

core_symmetry: 1/4 # Possible values: 1/4 and 1/8
one_hot_encoding: True
transform_output: True
train_split: 0.2
save_output: True

# Possible outputs:
# - keff_start
# - keff_max
# - ppf_start
# - ppf_max
# - ppf_end
# - cycle_length_in_days
# - rho_start
# - rho_max
# - keff_evolution
# - rho_evolution
output_columns:
  - rho_max
  - cycle_length_in_days


# =================================================================================================
# INPUT FILES SETTINGS
# =================================================================================================

input_output_file_details:
  file_path: data/input_output_data.csv
  
  create_new_cols:
    single_cols:
      rho_start: '1 - 1/df.keff_start'
      rho_max: '1 - 1/df.keff_max'

    multiple_cols:
      rhoN: '1 - 1/df.keffN'


monocore_file_details:
  file_path: data/monocores_dictionary.xlsx
  sheet_name: summary

  create_new_cols:
    single_cols:
      rho_start: '1 - 1/df.keff_start'
      rho_max: '1 - 1/df.keff_max'


monocore_evolution_file_details:
  file_path: data/monocores_dictionary.xlsx

  create_new_cols:
    single_cols:
      rho: '1 - 1/df.keff'


# =================================================================================================
# MONOCORE SETTINGS
# =================================================================================================

use_monocores: True
core_number_column_name: monocore

# Possible transform colum names:
# - cycle_length_in_days
# - keff_max
# - pxy_max
# - pz_max
# - keff_start
# - ppf_start
# - ppf_max
# - ppf_end
# - rho_start
# - rho_max
# - keff_evolution
# - rho_evolution
# - ppf_evolution
transform_column_names:
  - ppf_max
  - rho_max
  - cycle_length_in_days


# =================================================================================================
# NEURAL NETWORK SETTINGS
# =================================================================================================

# Possible activation functions:
# - relu
# - sigmoid
# - softmax
# - softplus
# - softsign
# - tanh
# - selu
# - elu
# - exponential
# - linear

layers:
  layer1:
    neurons: 30
    activation: tanh

  layer2:
    neurons: 30
    activation: linear

  layer_output:
    activation: linear

normalize: True
loss_function: mean_squared_error
learning_rate: 0.000001
epochs: 2


# =============================================================================
# SAVING THE OUTPUT
# =============================================================================

output_directory: output
add_timestamp: True
add_preffix_number: True

create_config_file: True
create_evaluation_file: True
create_loss_plot: True
create_accuracy_plot: True


# =============================================================================
# EVALUATION OF THE MODEL
# =============================================================================

# Possible metrics:
# - mean_absolute_error
# - std_absolute_error
# - mean_relative_error
# - std_relative_error
metrics:
  - mean_absolute_error
  - std_absolute_error
  - mean_relative_error
  - std_relative_error

